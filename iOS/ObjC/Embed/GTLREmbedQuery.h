// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Embed API (embed/v1)
// Description:
//   Provides the ability to embed various Bloombox data in 3rd party apps and
//   websites.

#import <GoogleApiClientForRest/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// style

/** Value: "MASTER_DETAIL" */
GTLR_EXTERN NSString * const kGTLREmbedStyleMasterDetail;
/** Value: "MASTER_ONLY" */
GTLR_EXTERN NSString * const kGTLREmbedStyleMasterOnly;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Embed query classes.
 */
@interface GTLREmbedQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieve menu data for a partner location.
 *
 *  Method: embed.data
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEmbedPlusMe
 *    @c kGTLRAuthScopeEmbedUserinfoEmail
 */
@interface GTLREmbedQuery_Data : GTLREmbedQuery
// Previous library name was
//   +[GTLQueryEmbed queryForDataWithpartner:location:]

/** Location ID. */
@property(nonatomic, copy, nullable) NSString *location;

/** Partner ID. */
@property(nonatomic, copy, nullable) NSString *partner;

/**
 *  Fetches a @c GTLREmbed_DedData.
 *
 *  Retrieve menu data for a partner location.
 *
 *  @param partner Partner ID.
 *  @param location Location ID.
 *
 *  @returns GTLREmbedQuery_Data
 */
+ (instancetype)queryWithPartner:(NSString *)partner
                        location:(NSString *)location;

@end

/**
 *  Retrieve a prepared embedded menu view for a given partner location.
 *
 *  Method: embed.view
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeEmbedPlusMe
 *    @c kGTLRAuthScopeEmbedUserinfoEmail
 */
@interface GTLREmbedQuery_View : GTLREmbedQuery
// Previous library name was
//   +[GTLQueryEmbed queryForViewWithpartner:location:style:]

/** Location ID. */
@property(nonatomic, copy, nullable) NSString *location;

/** Partner ID. */
@property(nonatomic, copy, nullable) NSString *partner;

/**
 *  UI embed style to return.
 *
 *  Likely values:
 *    @arg @c kGTLREmbedStyleMasterOnly Value "MASTER_ONLY"
 *    @arg @c kGTLREmbedStyleMasterDetail Value "MASTER_DETAIL"
 */
@property(nonatomic, copy, nullable) NSString *style;

/**
 *  Fetches a @c GTLREmbed_DedViewSpec.
 *
 *  Retrieve a prepared embedded menu view for a given partner location.
 *
 *  @param partner Partner ID.
 *  @param location Location ID.
 *  @param style UI embed style to return.
 *
 *  Likely values for @c style:
 *    @arg @c kGTLREmbedStyleMasterOnly Value "MASTER_ONLY"
 *    @arg @c kGTLREmbedStyleMasterDetail Value "MASTER_DETAIL"
 *
 *  @returns GTLREmbedQuery_View
 */
+ (instancetype)queryWithPartner:(NSString *)partner
                        location:(NSString *)location
                           style:(NSString *)style;

@end

NS_ASSUME_NONNULL_END
